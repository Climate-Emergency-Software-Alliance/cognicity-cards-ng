{
  "name": "urbanriskmap-cards",
  "version": "2.0.0",
  "description": "Client input reporting cards for crowd sourcing disaster information",
  "main": "index.js",
  "author": "Mayank Ojha, MIT Urban Risk Lab",
  "license": "GPL-3.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/urbanriskmap/cognicity-cards-ng.git"
  },
  "keywords": [
    "cognicity",
    "crowdsourcing",
    "collective-intelligence",
    "disaster-map",
    "report-cards"
  ],
  "bugs": {
    "url": "https://github.com/urbanriskmap/cognicity-cards-ng/issues"
  },
  "homepage": "https://github.com/urbanriskmap/cognicity-cards-ng#readme",
  "scripts": {
    "ng": "ng",
    "start": "dep=jp npm run pre-build-tasks && ng serve",
    "serve-prod": "dep=js npm run pre-build-tasks && ng serve -prod",
    "build": "npm run build-dev && npm run build-prod",
    "build-dev": "npm run build-dev-in && npm run build-dev-us && npm run build-dev-jp",
    "build-prod": "npm run build-prod-ngsw-us && npm run build-prod-ngsw-in && npm run build-prod-ngsw-jp",
    "build-dev-us": "dep=us npm run pre-build-tasks && ng build --env=dev-us --output-path='dist/dev-us'",
    "build-dev-in": "dep=in npm run pre-build-tasks && ng build --env=dev-in --output-path='dist/dev-in'",
    "build-dev-jp": "dep=jp npm run pre-build-tasks && ng build --env=dev-jp --output-path='dist/dev-jp'",
    "build-prod-us": "dep=us npm run pre-build-tasks && ng build --prod --env=prod-us --output-path='dist/prod-us' --build-optimizer --vendor-chunk=true --stats-json",
    "build-prod-in": "dep=in npm run pre-build-tasks && ng build --prod --env=prod-in --output-path='dist/prod-in' --build-optimizer --vendor-chunk=true --stats-json",
    "build-prod-jp": "dep=jp npm run pre-build-tasks && ng build --prod --env=prod-jp --output-path='dist/prod-jp' --build-optimizer --vendor-chunk=true --stats-json",
    "build-prod-ngsw-us": "npm run build-prod-us && node_modules/.bin/ngsw-config dist/prod-us ./src/ngsw-config.json && cp node_modules/@angular/service-worker/ngsw-worker.js ./dist/prod-us/ngsw-worker.js",
    "build-prod-ngsw-in": "npm run build-prod-in && node_modules/.bin/ngsw-config dist/prod-in ./src/ngsw-config.json && cp node_modules/@angular/service-worker/ngsw-worker.js ./dist/prod-in/ngsw-worker.js",
    "build-prod-ngsw-jp": "npm run build-prod-jp && node_modules/.bin/ngsw-config dist/prod-jp ./src/ngsw-config.json && cp node_modules/@angular/service-worker/ngsw-worker.js ./dist/prod-jp/ngsw-worker.js",
    "serve-prod-ngsw": "npm run build-prod-ngsw && http-server dist/prod-us -p 8080",
    "pre-build-tasks": "babel tasks/**/*.ts tasks/*.ts -o tasks/index.js && gulp --gulpfile ./tasks --dep $dep",
    "docs": "rm -rf ./docs && gulp --gulpfile ./tasks/generate-docs",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "add-deck": "ng g m routes/decks/$deck --routing && ng g c routes/decks/$deck -m $deck",
    "add-card": "ng g m routes/cards/$card --routing && ng g c routes/cards/$card -m $card",
    "add-component": "ng g c components/$comp -m routes/decks/$card"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^7.0.1",
    "@angular/cdk": "^7.0.2",
    "@angular/common": "^7.0.1",
    "@angular/compiler": "^7.0.1",
    "@angular/core": "^7.0.1",
    "@angular/forms": "^7.0.1",
    "@angular/http": "^7.0.1",
    "@angular/material": "^7.0.2",
    "@angular/platform-browser": "^7.0.1",
    "@angular/platform-browser-dynamic": "^7.0.1",
    "@angular/router": "^7.0.1",
    "@angular/service-worker": "^7.0.1",
    "@ngx-translate/core": "^11.0.0",
    "@ngx-translate/http-loader": "^4.0.0",
    "core-js": "^2.4.1",
    "mapbox-gl": "^0.50.0",
    "node-sass": "^4.9.4",
    "rxjs": "^6.3.3",
    "sass-loader": "^7.1.0",
    "zone.js": "^0.8.19"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.10.0",
    "@angular/cli": "^7.0.3",
    "@angular/compiler-cli": "^7.0.1",
    "@angular/language-service": "^7.0.1",
    "@types/geojson": "^7946.0.4",
    "@types/gulp": "^4.0.5",
    "@types/jasmine": "~2.8.3",
    "@types/jasminewd2": "~2.0.2",
    "@types/node": "^10.12.1",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.3",
    "babel-preset-es2015": "^6.24.1",
    "codelyzer": "^4.0.1",
    "del": "^3.0.0",
    "gulp": "^4.0.0",
    "gulp-change": "^1.0.0",
    "gulp-changed-in-place": "^2.3.0",
    "gulp-rename": "^1.4.0",
    "gulp-typedoc": "^2.2.0",
    "jasmine-core": "^3.3.0",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "^3.1.1",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "^2.0.4",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^1.4.0",
    "minimist": "^1.2.0",
    "protractor": "^5.4.1",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typedoc": "^0.13.0",
    "typescript": "^3.1.3"
  }
}
